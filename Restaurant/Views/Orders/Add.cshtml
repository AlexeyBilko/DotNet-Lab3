@using ServiceLayer.DTO
@model OrdersViewModel
@{ Model.meals = new List<MealDTO>(); }

<head>
    <link rel="stylesheet" href="css/form.css"/>
</head>

<div class="container" class="form-group">
    <form method="post" asp-action="AddNewMeal" asp-controller="Meals" id="addnewmeal" enctype="multipart/form-data" class="add-form">
        <input asp-for="TableNumber" type="number" id="tablenumber" placeholder="Table Number" min="1" max="25">
        <input asp-for="OrderedTime" type="datetime" value="@DateTime.Now" placeholder="Ordered Time">

        <div id="strings">
            @for (int i = 0; i < Model.meals.Count; i++)
            {
                <div class="editor-label">
                    <select asp-for="meals[i]" asp-items="@ViewBag.data"></select>
                </div>
            }
        </div>

        <div id="newstring" style="display:none;">
            <select name="meals[#]" asp-items="@ViewBag.data"></select>
        </div>
        <button type="button" id="addstring">Add Ingredient</button>

        <input type="submit" value="Create Order" class="">
    </form>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
@section scripts{
    <script type="text/javascript">
        var container = $('#strings');
        $('#addstring').click(function() {
          var index = container.children('input').length;
          var clone = $('#newstring').clone();
          clone.html($(clone).html().replace(/\[#\]/g, '[' + index + ']'));
          container.append(clone.html());
        });
    </script>
}